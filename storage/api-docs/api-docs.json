{
    "openapi": "3.0.0",
    "info": {
        "title": "Mentor OpenApi Documentation",
        "description": "L5 Swagger OpenApi. Mentor API documentation",
        "contact": {
            "email": "mikhailgregurco@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api/v1",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/register": {
            "post": {
                "tags": [
                    "Authenticate"
                ],
                "summary": "Register new user",
                "description": "Return user data",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authenticate"
                ],
                "summary": "User login",
                "description": "Return user data",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authenticate"
                ],
                "summary": "Logout user",
                "operationId": "logout",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get list of courses",
                "description": "Return list of courses",
                "operationId": "getCoursesList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseResource"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Store new course",
                "description": "Return course data",
                "operationId": "storeCourse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreCourseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Course"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/courses/{id}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get course",
                "description": "Return course",
                "operationId": "getCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CourseResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Courses"
                ],
                "summary": "Update existing course",
                "description": "Returns updated course data",
                "operationId": "updateCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateCourseRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Courses"
                ],
                "summary": "Delete existing course",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteCourse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Course id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get list of tasks",
                "description": "Returns list of tasks",
                "operationId": "getTasksList",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TaskResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Store new task",
                "description": "Returns task data",
                "operationId": "storeTask",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/tasks/{id}": {
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update existing task",
                "description": "Returns updated task data",
                "operationId": "updateTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTaskRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "202": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete existing task",
                "description": "Deletes a record and returns no content",
                "operationId": "deleteTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Task id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Resource Not Found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "AccessRequest": {
                "title": "Login User request",
                "description": "Login user request body data",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "title": "email",
                        "description": "User email",
                        "type": "string",
                        "example": "taylor@gmail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "User password",
                        "type": "string",
                        "example": 12345678
                    }
                },
                "type": "object"
            },
            "RegistrationRequest": {
                "title": "Register User request",
                "description": "Store User request body data",
                "required": [
                    "name",
                    "email",
                    "password",
                    "password_confirmation"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new user",
                        "type": "string",
                        "example": "Taylor"
                    },
                    "email": {
                        "title": "email",
                        "description": "User email",
                        "type": "string",
                        "example": "taylor@gmail.com"
                    },
                    "password": {
                        "title": "password",
                        "description": "User password",
                        "type": "string",
                        "example": 12345678
                    },
                    "password_confirmation": {
                        "title": "password_confirmation",
                        "description": "User password confirmation",
                        "type": "string",
                        "example": 12345678
                    }
                },
                "type": "object"
            },
            "StoreCourseRequest": {
                "title": "Store Course request",
                "description": "Store Course request body data",
                "required": [
                    "title",
                    "description",
                    "category_id"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "Name of the new task",
                        "type": "string",
                        "example": "Computer networking"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new task",
                        "type": "string",
                        "example": "Computer networking is a course..."
                    },
                    "category_id": {
                        "title": "category_id",
                        "description": "Category id",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "StoreTaskRequest": {
                "title": "Store Task request",
                "description": "Store Task request body data",
                "required": [
                    "title"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "Name of the new task",
                        "type": "string",
                        "example": "Drink coffee"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new task",
                        "type": "string",
                        "example": "This is new task's description"
                    },
                    "end_time": {
                        "title": "end_time",
                        "description": "Limit date of task",
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-11-11 23:31"
                    }
                },
                "type": "object"
            },
            "UpdateCourseRequest": {
                "title": "Update Course request",
                "description": "Update Course request body data",
                "required": [
                    "title",
                    "description"
                ],
                "properties": {
                    "title": {
                        "title": "title",
                        "description": "Name of the new task",
                        "type": "string",
                        "example": "Computer networking"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new task",
                        "type": "string",
                        "example": "Computer networking is a course..."
                    }
                },
                "type": "object"
            },
            "CourseResource": {
                "title": "CourseResource",
                "description": "Course resource"
            },
            "TaskResource": {
                "title": "TaskResource",
                "description": "Task resource"
            },
            "Course": {
                "title": "Course",
                "description": "Course model",
                "xml": {
                    "name": "Course"
                }
            },
            "Task": {
                "title": "Task",
                "description": "Task model",
                "xml": {
                    "name": "Task"
                }
            },
            "User": {
                "title": "User",
                "description": "User model",
                "xml": {
                    "name": "User"
                }
            }
        }
    },
    "security": [
        []
    ]
}